import os
import cv2
import img2pdf
import glob
import shutil
from tqdm import tqdm


def extract_video(video_path, temp_path):
    if os.path.exists(temp_path):
        shutil.rmtree(temp_path)
    os.makedirs(temp_path, exist_ok=True)

    vs = cv2.VideoCapture(video_path)
    if not vs.isOpened():
        raise Exception(f'unable to open file {video_path}')

    fgbg = cv2.createBackgroundSubtractorMOG2(
        history=16, varThreshold=16, detectShadows=False)

    cnt = 0
    (W, H) = (192, 108)
    orig = None
    with tqdm(total=int(vs.get(cv2.CAP_PROP_FRAME_COUNT)), ncols=100) as pbar:
        while True:
            ret, frame = vs.read()
            if ret is not True:
                break
            pbar.update(1)

            frame_resized = cv2.resize(frame, (W, H))
            mask = fgbg.apply(frame_resized)

            p_diff = (cv2.countNonZero(mask) / float(W * H)) * 100

            if p_diff < 0.1:
                orig = frame
            elif p_diff > 3 and orig is not None:
                cnt += 1
                cv2.imwrite(os.path.join(temp_path, f"{cnt:03}.png"), orig)
                orig = None
    
        if orig is not None:
            cnt += 1
            cv2.imwrite(os.path.join(temp_path, f"{cnt:03}.png"), orig)
            orig = None

    vs.release()

    with open(video_path.replace(".mp4", ".pdf"), "wb") as f:
        f.write(img2pdf.convert(sorted(glob.glob(f"{temp_path}/*.png"))))
    shutil.rmtree(temp_path)

    return


if __name__ == "__main__":
    video_path = ""
    extract_video(video_path, os.path.join(
        os.path.dirname(video_path), "temp"))
